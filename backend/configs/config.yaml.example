server:
  port: "8080"
  mode: "debug"  # debug, release, test
  read_timeout: 30    # HTTP 读取超时 (秒)
  write_timeout: 30   # HTTP 写入超时 (秒) 
  idle_timeout: 120   # HTTP 空闲超时 (秒)
  shutdown_timeout: 30 # 优雅关闭超时 (秒)

database:
  # 数据库类型: sqlite, postgres
  type: "sqlite"  # 选择使用的数据库类型
  
  # SQLite 配置 (当 type = "sqlite" 时使用)
  dsn: "./data/kube-node-manager.db"
  
  # PostgreSQL 配置 (当 type = "postgres" 时使用)
  # 注意: 使用 PostgreSQL 时请清空或删除上面的 dsn 字段，或提供正确的 PostgreSQL DSN
  # host: "localhost"
  # port: 5432
  # database: "kube_node_manager"
  # username: "postgres"
  # password: "your-password"
  # ssl_mode: "disable"  # disable, require, verify-ca, verify-full
  
  # 完整 DSN 连接字符串 (可选)
  # 如果提供了 DSN，系统会优先使用 DSN 而不是上面的单独配置项
  # PostgreSQL DSN 格式: "host=localhost port=5432 user=postgres dbname=kube_node_manager sslmode=disable password=your-password"
  # SQLite DSN 格式: "./data/kube-node-manager.db" 或 ":memory:"
  # 
  # 重要提示: 
  # - 使用 SQLite 时，dsn 应该是文件路径
  # - 使用 PostgreSQL 时，dsn 应该是 PostgreSQL 连接字符串，或者留空使用上面的单独配置项
  
  # 连接池配置 (PostgreSQL 专用，SQLite 忽略)
  max_open_conns: 25    # 最大打开连接数
  max_idle_conns: 10    # 最大空闲连接数
  max_lifetime: 3600    # 连接最大生存时间 (秒)

jwt:
  secret: "your-jwt-secret-change-in-production"
  expire_time: 86400  # 24 hours

ldap:
  # LDAP 认证配置
  # 注意：LDAP 用户默认分配为 'viewer' 角色（只读权限）
  enabled: false  # 是否启用 LDAP 认证
  
  # LDAP 服务器配置
  host: "ldap.example.com"    # LDAP 服务器地址
  port: 389                   # LDAP 服务器端口 (389 for LDAP, 636 for LDAPS)
  
  # LDAP 目录结构配置
  base_dn: "dc=example,dc=com"                    # 搜索基础 DN
  user_filter: "(uid=%s)"                         # 用户搜索过滤器，%s 会被替换为用户名
  
  # LDAP 管理员账号配置 (用于搜索用户)
  admin_dn: "cn=admin,dc=example,dc=com"          # 管理员 DN
  admin_pass: "admin_password"                    # 管理员密码
  
  # 常见的 LDAP 配置示例:
  # Active Directory:
  #   base_dn: "dc=company,dc=com"
  #   user_filter: "(sAMAccountName=%s)"
  #   admin_dn: "cn=ldap-service,ou=Service Accounts,dc=company,dc=com"
  #
  # OpenLDAP:
  #   base_dn: "ou=users,dc=company,dc=com"
  #   user_filter: "(uid=%s)"
  #   admin_dn: "cn=admin,dc=company,dc=com"
  #
  # 对于不同的用户属性，可以使用不同的过滤器:
  #   user_filter: "(mail=%s)"          # 使用邮箱登录
  #   user_filter: "(cn=%s)"            # 使用公共名称登录
  #
  # LDAP 用户角色说明:
  # - LDAP 用户登录后自动分配为 'viewer' 角色（只读权限）
  # - viewer 权限: 可以查看节点信息，但不能进行任何管理操作
  # - 如需提升权限，请管理员手动修改用户角色为 'user' 或 'admin'
  #
  # 角色权限对比:
  # - admin: 完全管理权限（用户管理、节点管理、集群管理等）
  # - user: 节点管理权限（禁止调度、驱逐Pod、添加标签污点等）
  # - viewer: 只读权限（仅可查看节点信息、审计日志等）
  #
  # LDAP 用户管理限制:
  # - LDAP 用户不能被删除（只能在 LDAP 目录中管理）
  # - LDAP 用户的用户名和邮箱不能在本系统中修改（从 LDAP 同步）
  # - 管理员只能修改 LDAP 用户的角色和状态
  # - LDAP 用户不能在本系统中修改密码（密码由 LDAP 管理）
  # - 用户信息会在每次登录时从 LDAP 目录自动同步

# 日志配置
logging:
  # 日志格式: text, json
  format: "text"      # 生产环境建议使用 json 格式
  level: "info"       # debug, info, warn, error
  structured: false   # 是否启用结构化日志

# 节点异常监控配置
monitoring:
  enabled: true       # 是否启用节点异常监控
  interval: 60        # 监控周期（秒），建议 60-300 秒，避免对集群造成压力
  
  # 缓存配置（多副本部署必须启用，避免缓存不一致问题）
  cache:
    enabled: true     # 是否启用缓存
    type: "postgres"  # 缓存类型: postgres（推荐）, memory（单副本测试）, none（禁用）
    
    # PostgreSQL 缓存配置（推荐用于生产环境）
    postgres:
      table_name: "cache_entries"     # 缓存表名
      cleanup_interval: 300           # 清理过期数据周期（秒），建议 300-600
      use_unlogged: true              # 使用 UNLOGGED 表（性能提升 2-3倍，重启后缓存丢失）
    
    # 缓存 TTL 配置（单位：秒）
    ttl:
      statistics: 300   # 统计数据缓存: 5分钟
      active: 30        # 活跃异常缓存: 30秒（频繁更新）
      clusters: 600     # 集群列表缓存: 10分钟
      type_stats: 300   # 类型统计缓存: 5分钟
  
  # 数据清理配置
  cleanup:
    enabled: true         # 是否启用自动清理
    retention_days: 90    # 数据保留天数，默认90天
    cleanup_time: "02:00" # 每天清理时间（格式：HH:MM），默认凌晨2点
    batch_size: 1000      # 批量删除大小，避免长时间锁表

# 健康检查配置  
health:
  enabled: true       # 是否启用健康检查端点
  database_timeout: 5 # 数据库健康检查超时 (秒)

# 微服务配置
microservice:
  service_name: "kube-node-manager"
  instance_id: ""     # 实例ID，留空自动生成
  register_interval: 30 # 服务注册间隔 (秒)
  
# 环境变量覆盖说明:
# - PORT: 覆盖 server.port
# - LOG_FORMAT: 覆盖 logging.format (text/json)
# - LOG_LEVEL: 覆盖 logging.level  
# - DATABASE_URL: 覆盖完整数据库连接字符串
# - SERVICE_NAME: 覆盖 microservice.service_name