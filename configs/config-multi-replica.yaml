server:
  port: "8080"
  mode: "debug"  # debug, release, test
  read_timeout: 30    # HTTP 读取超时 (秒)
  write_timeout: 30   # HTTP 写入超时 (秒) 
  idle_timeout: 120   # HTTP 空闲超时 (秒)
  shutdown_timeout: 30 # 优雅关闭超时 (秒)

database:
  # 数据库类型: sqlite, postgres
  type: "postgres"  # 选择使用的数据库类型
  
  # SQLite 配置 (当 type = "sqlite" 时使用)
  # dsn: "./data/kube-node-manager.db"
  
  # PostgreSQL 配置 (当 type = "postgres" 时使用)
  host: "localhost"
  port: 5432
  database: "kube_node_mgr"
  username: "kube_node_mgr"
  password: "xxxxxxxxxxxxx"
  ssl_mode: "disable"  # disable, require, verify-ca, verify-full

  # 完整 DSN 连接字符串 (可选，优先级高于单独配置项)
  # 对于 PostgreSQL: "host=localhost port=5432 user=postgres dbname=kube_node_mgr sslmode=disable password=your-password"
  # 对于 SQLite: "./data/kube-node-manager.db" 或 ":memory:"
  
  # 连接池配置 (PostgreSQL 专用，SQLite 忽略)
  max_open_conns: 50    # 最大打开连接数
  max_idle_conns: 20    # 最大空闲连接数
  max_lifetime: 7200    # 连接最大生存时间 (秒)

progress:
  enable_database: true  # 启用数据库模式, 多副本开启

jwt:
  secret: "your-jwt-secret-change-in-production"
  expire_time: 86400  # 24 hours

ldap:
  enabled: false
  host: "ldap.example.com"
  port: 389
  base_dn: "dc=example,dc=com"
  user_filter: "(sAMAccountName=%s)"
  admin_dn: "ldap.example.com"
  admin_pass: "admin_password"

# 日志配置
logging:
  # 日志格式: text, json
  format: "json"      # 生产环境建议使用 json 格式
  level: "info"       # debug, info, warn, error
  structured: true   # 是否启用结构化日志

# 监控配置
monitoring:
  enabled: true       # 是否启用监控指标端点
  interval: 120       # 监控指标采集间隔 (秒)
  path: "/metrics"    # 监控指标端点路径

# 健康检查配置  
health:
  enabled: true       # 是否启用健康检查端点
  database_timeout: 5 # 数据库健康检查超时 (秒)

# 微服务配置
microservice:
  service_name: "kube-node-mgr"
  instance_id: ""     # 实例ID，留空自动生成
  register_interval: 30 # 服务注册间隔 (秒)
  
# 自动化运维配置
automation:
  enabled: false  # 自动化功能主开关 (默认禁用)
  
  # Ansible 配置
  ansible:
    enabled: true
    binary_path: "/usr/bin/ansible-playbook"  # ansible-playbook 二进制文件路径
    temp_dir: "/tmp/ansible-runs"             # Ansible 临时执行目录
    timeout: 3600                             # Playbook 执行超时 (秒)
    max_concurrent: 10                        # 最大并发执行数
  
  # SSH 配置
  ssh:
    enabled: true
    timeout: 300                              # SSH 命令执行超时 (秒)
    max_concurrent: 50                        # 最大并发连接数
    connection_pool_size: 20                  # 连接池大小
    connection_timeout: 30                    # 连接超时 (秒)
    keepalive_interval: 60                    # Keep-alive 间隔 (秒)
  
  # 脚本配置
  scripts:
    enabled: true
    temp_dir: "/tmp/scripts"                  # 脚本临时执行目录
    max_script_size: 1048576                  # 最大脚本大小 (字节, 1MB)
    execution_timeout: 600                    # 脚本执行超时 (秒)
  
  # 工作流配置
  workflows:
    enabled: true
    max_steps: 50                             # 工作流最大步骤数
    step_timeout: 3600                        # 单步骤最大超时 (秒)
    max_retries: 3                            # 步骤失败最大重试次数
  
  # 安全配置
  security:
    encryption_key: ""                        # 凭据加密密钥 (32字节, 建议通过环境变量 AUTOMATION_ENCRYPTION_KEY 设置)
    require_approval: false                   # 是否需要审批
    dangerous_commands:                       # 危险命令黑名单
      - "rm -rf /"
      - "rm -rf /*"
      - "dd if=/dev/zero"
      - "mkfs"
      - ":(){ :|:& };:"                      # Fork bomb
      - "> /dev/sda"
      - "chmod -R 777 /"
    command_whitelist_mode: false             # 是否启用命令白名单模式
    command_whitelist: []                     # 命令白名单 (仅在 whitelist_mode = true 时生效)

# 环境变量覆盖说明:
# - PORT: 覆盖 server.port
# - LOG_FORMAT: 覆盖 logging.format (text/json)
# - LOG_LEVEL: 覆盖 logging.level  
# - DATABASE_URL: 覆盖完整数据库连接字符串
# - SERVICE_NAME: 覆盖 microservice.service_name
# - AUTOMATION_ENABLED: 覆盖 automation.enabled (true/false)
# - AUTOMATION_ENCRYPTION_KEY: 覆盖 automation.security.encryption_key (推荐使用环境变量)